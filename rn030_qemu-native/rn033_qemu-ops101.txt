
###############################################################################################
###############################################################################################
###############################################################################################
###############################################################################################
INDEX
###############################################################################################
###############################################################################################
###############################################################################################
###############################################################################################


```access-and-setup

```as1

```as2 with bigger disk space for packages

```clean-shutdown
sudo pkill -SIGTERM qemu-system-aarch64

!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
```persistent-attach-tmux
!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
tmux new -s NAME  
ctrl-b d to detach
to reattach to name>>>
tmux attach -t free246

```ip-address
stop disappearing ip address


04:55 greg@xcf16 /Users/0-qemu ? tmux new -s free246
[detached (from session free246)]
05:01 greg@xcf16 /Users/0-qemu ? tmux ls
free246: 1 windows (created Fri Jun 13 04:55:59 2025)
05:01 greg@xcf16 /Users/0-qemu ? 

...from within free246 tmux launch the ftest2.sh qemu launch scripting


```set-prompt
04:58 greg@xcf16 ~ % set prompt = "`date +%y%m%d-%H%M%S` %n@%m %~ ? "
250613-050020 greg@xcf16 ~ ? 
250613-050020 greg@xcf16 ~ ? 



-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
CONTENT
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------
-----------------------------------------------------------------------------------------------


```access-and-setup

```as1 freebsd - 
>>> capability1 >>>
copy and view log files in ufs from netgate ext USB w/ USB moved to mac to read on freebsd vm 
mac os native can not read ufs 

^^^
06:10 greg@xcf16 /Users/0-qemu ? sudo ./ftest1.vm 
^^^
boot to multi user

>>>capability2>>>
change prompt 
^^^
vi fix .cshrc add prompt alias
more .cshrc =
# alias grep    grep -d skip
alias precmd 'set prompt = "`date +%y%m%d-%H%M%S` %n@%m %/ _ "'

250607-133958 root@freebsd /root _ 

...preserved on reboot (write FS is now working)



first freebsd native vm   
06:08 greg@xcf16 /Users/0-qemu ? more ftest1.vm
#!/bin/bash

# Path to your raw disk image
IMAGE="FreeBSD-14.2-RELEASE-arm64-aarch64-ufs.raw"

# Run QEMU
qemu-system-aarch64 \
  -machine virt,highmem=off \
  -cpu host \
  -accel hvf \
  -m 2048 \
  -smp 4 \
  -nographic \
  -bios QEMU_EFI.fd \
  -drive if=none,file="$IMAGE",format=raw,id=hd0 \
  -device virtio-blk-device,drive=hd0 \
  -netdev user,id=net0,hostfwd=tcp::3222-:22 \
  -device virtio-net-device,netdev=net0 \
  -no-reboot
06:10 greg@xcf16 /Users/0-qemu ? 















```as2
#!/bin/bash

# Paths
DISK="freebsd-24G.raw"
ISO="FreeBSD-14.2-RELEASE-arm64-aarch64-bootonly.iso"
BIOS="QEMU_EFI.fd"

# Create disk image if it doesn't exist
if [ ! -f "$DISK" ]; then
  echo "[*] Creating 24G disk image: $DISK"
  qemu-img create -f raw "$DISK" 24G
fi

# Choose whether to boot installer or OS
if [ -f "$ISO" ] && [ ! -f ".vm_initialized" ]; then
  echo "[*] Booting from FreeBSD installer ISO..."
  BOOT_ISO="-cdrom $ISO"
else
  BOOT_ISO=""
fi

# Launch the VM
qemu-system-aarch64 \
  -machine virt,highmem=off \
  -cpu host \
  -accel hvf \
  -m 4096 \
  -smp 4 \
  -nographic \
  -bios "$BIOS" \
  $BOOT_ISO \
  -drive if=none,file="$DISK",format=raw,id=hd0 \
  -device virtio-blk-device,drive=hd0 \
  -netdev vmnet-bridged,id=net0,ifname=en18 \
  -device virtio-net-device,netdev=net0 \
  -no-reboot

# If ISO was used, mark VM as initialized (user removes this file to reinstall)
if [ -f "$ISO" ] && [ ! -f ".vm_initialized" ]; then
  touch .vm_initialized
fi






